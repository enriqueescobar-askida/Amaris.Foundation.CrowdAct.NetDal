// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Amaris.Foundation.CrowdAct.NetDal.Entities
{

    // ActivityLanguage
    [Table("ActivityLanguage", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class ActivityLanguage
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ActivityID", Order = 1, TypeName = "int")]
        [Index(@"PK_ActivityLanguage", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Activity ID")]
        public int ActivityId { get; set; } // ActivityID (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LanguageID", Order = 2, TypeName = "int")]
        [Index(@"IX_ActivityLanguage_LanguageID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"PK_ActivityLanguage", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Language ID")]
        public int LanguageId { get; set; } // LanguageID (Primary key)

        [Column(@"Main", Order = 3, TypeName = "bit")]
        [Required]
        [Display(Name = "Main")]
        public bool Main { get; set; } // Main

        // Foreign keys

        /// <summary>
        /// Parent Activity pointed by [ActivityLanguage].([ActivityId]) (FK_ActivityLanguage_Activity_ActivityID)
        /// </summary>
        [ForeignKey("ActivityId"), Required] public virtual Activity Activity { get; set; } // FK_ActivityLanguage_Activity_ActivityID

        /// <summary>
        /// Parent Language pointed by [ActivityLanguage].([LanguageId]) (FK_ActivityLanguage_Language_LanguageID)
        /// </summary>
        [ForeignKey("LanguageId"), Required] public virtual Language Language { get; set; } // FK_ActivityLanguage_Language_LanguageID
    }

}
// </auto-generated>
